# Rime schema
# encoding: utf-8

schema:
  schema_id: lufs_flypy
  name: 小鹤双拼
  version: "2023-12-18"
  author:
    - double pinyin layout by 鶴
    - Rime schema by 佛振 <chen.sst@gmail.com>
    - Modified by Lufs_X <i@isteed.cc>
  description: |
    小鹤双拼方案。
    稍微的改了一下（小声

switches:
  - name: ascii_mode # 未启用 ascii_composer 时，该项无意义
    # reset: 0 # 默认状态: 0 中文输入 1 英文输入
    states: [中文, 西文]
  - name: full_shape
    states: [半角, 全角]
  - name: ascii_punct
    states: [。，, ．，]
  - name: traditionalization
    # reset: 0 # 默认状态: 0 简体 1 繁体
    states: [简, 繁]
  - name: emoji_suggestion
    # reset: 1 # 默认状态: 0 关闭 1 开启
    states: [🈚️️, 🈶️]

engine:
  processors:
    - ascii_composer # Windows 用户请解除此行注释，否则将会无法切换到英文输入
    - recognizer
    - lua_processor@select_character # lua 选词扩展，如需关闭请注释
    - key_binder
    - speller
    - selector
    - punctuator
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - lua_translator@date_translator # 动态日期时间输入
    - lua_translator@unicode_input # Unicode 输入支持
    - table_translator@custom_phrase # 用户自定义词典
    - script_translator
  filters:
    - simplifier@emoji_suggestion
    - simplifier@traditionalize # 简繁转化
    - uniquifier # 去重
    - lua_filter@long_phrase_first # 最长词组和单字在先
    # - lua_filter@single_char_first # 单字优先
    # - lua_filter@single_char_only # 只显示单字

traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none # 转换提示: all 显示 | char 仅单字显示 | none 不显示。

emoji_suggestion:
  opencc_config: emoji.json
  option_name: emoji_suggestion
  tips: false

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba/
  delimiter: " '"
  algebra:
    - derive/^([jqxy])u$/$1v/
    - derive/^([aoe])([ioun])$/$1$1$2/
    - derive/^([aoe])(ng)?$/$1$1$2/
    - derive/iu$/Ⓠ/
    - derive/(.)ei$/$1Ⓦ/
    - derive/uan$/Ⓡ/
    - derive/[uv]e$/Ⓣ/
    - derive/un$/Ⓨ/
    - derive/^sh/Ⓤ/
    - derive/^ch/Ⓘ/
    - derive/^zh/Ⓥ/
    - derive/uo$/Ⓞ/
    - derive/ie$/Ⓟ/
    - derive/(.)i?ong$/$1Ⓢ/
    - derive/ing$|uai$/Ⓚ/
    - derive/(.)ai$/$1Ⓓ/
    - derive/(.)en$/$1Ⓕ/
    - derive/(.)eng$/$1Ⓖ/
    - derive/[iu]ang$/Ⓛ/
    - derive/(.)ang$/$1Ⓗ/
    - derive/ian$/Ⓜ/
    - derive/(.)an$/$1Ⓙ/
    - derive/(.)ou$/$1Ⓩ/
    - derive/[iu]a$/Ⓧ/
    - derive/iao$/Ⓝ/
    - derive/(.)ao$/$1Ⓒ/
    - derive/ui$/Ⓥ/
    - derive/in$/Ⓑ/
    - xlit/ⓆⓌⓇⓉⓎⓊⒾⓄⓅⓈⒹⒻⒼⒽⒿⓀⓁⓏⓍⒸⓋⒷⓃⓂ/qwrtyuiopsdfghjklzxcvbnm/

translator:
  dictionary: extended
  contextual_suggestions: true
  enable_completion: false
  max_homophones: 7

  preedit_format:
    # - xform/ // # 去掉上屏字符间空格
  prism: lufs_flypy

grammar:
  language: zh-hans-t-essay-bgw

punctuator:
  import_preset: lufs_symbols

key_binder:
  import_preset: default

recognizer:
  import_preset: default

custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: true
  initial_quality: 1
